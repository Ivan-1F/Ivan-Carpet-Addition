plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// From Carpet-TIS-Addition
boolean buildRelease = System.getenv("BUILD_RELEASE") == "true"
String buildNumber = System.getenv("BUILD_ID")
String versionSuffix = ''
if (!buildRelease) {
	// not release, no build number, probably not in github action CI, so added a -SNAPSHOT suffix
	if (buildNumber == null) {
		versionSuffix += '-SHAPSHOT'
	}
	else {
		versionSuffix += '+build.' + buildNumber
	}
}
String fullModVersion = project.mod_version + versionSuffix

archivesBaseName = project.archives_base_name
version = 'mc' + project.minecraft_version + '-v' + fullModVersion
group = project.maven_group

repositories {
	maven {
		url 'https://masa.dy.fi/maven'
	}
	maven {
		url 'https://www.jitpack.io'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation 'com.github.Fallen-Breath:conditional-mixin:v0.3.2'
	include "com.github.Fallen-Breath:conditional-mixin:v0.3.2"

	// mods
	modImplementation "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}"

	// runtime mods
	modRuntimeOnly "com.github.astei:lazydfu:0.1.2"  // faster startup

	// libraries
	implementation "org.yaml:snakeyaml:${project.snakeyaml_version}"
	include "org.yaml:snakeyaml:${project.snakeyaml_version}"
}

processResources {
	inputs.property "version", fullModVersion

	filesMatching("fabric.mod.json") {
		expand "version": fullModVersion
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}
